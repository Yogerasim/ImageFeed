import UIKit
import Kingfisher

protocol ImagesListCellDelegate: AnyObject {
    func imageListCellDidTapLike(_ cell: ImagesListCell)
}

final class ImagesListCell: UITableViewCell {
    static let reuseIdentifier = "ImagesListCell"

    @IBOutlet private var cellImageView: UIImageView!
    @IBOutlet private var dateLabel: UILabel!
    @IBOutlet private var likeButton: UIButton!

    weak var delegate: ImagesListCellDelegate?

    override func awakeFromNib() {
        super.awakeFromNib()
        cellImageView.layer.cornerRadius = 10
        cellImageView.clipsToBounds = true
    }

    @IBAction private func likeButtonClicked(_ sender: UIButton) {
        print("‚ù§Ô∏è –ö–Ω–æ–ø–∫–∞ –ª–∞–π–∫–∞ –Ω–∞–∂–∞—Ç–∞ (–¥–µ–ª–µ–≥–∞—Ç–Ω—ã–π –≤—ã–∑–æ–≤)")
        delegate?.imageListCellDidTapLike(self)
    }

    func configure(with url: URL?, dateText: String, isLiked: Bool) {
        if let url = url {
            print("üì• –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ Kingfisher: \(url)")
            cellImageView.kf.setImage(with: url) { result in
                switch result {
                case .success:
                    print("‚úÖ –ü—Ä–µ–≤—å—é —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ")
                case .failure(let error):
                    print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–≤—å—é: \(error.localizedDescription)")
                }
            }
        } else {
            print("‚ö†Ô∏è URL –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Å—Ç–∞–≤–∏–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä")
            cellImageView.image = UIImage(named: "placeholder")
        }

        dateLabel.text = dateText
        setLiked(isLiked)
    }

    func setLiked(_ isLiked: Bool) {
        let imageName = isLiked ? "like_button_on" : "like_button_off"
        likeButton.setImage(UIImage(named: imageName), for: .normal)
    }
}
